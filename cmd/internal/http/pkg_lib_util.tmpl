package lib

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"regexp"
	"runtime/debug"
	"strconv"
	"strings"

	"github.com/go-chi/chi/v5"
	"github.com/shenghui0779/yiigo"
	"go.uber.org/zap"

	"{{.Module}}/pkg/lib/log"
)

// Safe recover for goroutine when panic
func Safe(ctx context.Context, fn func(ctx context.Context)) {
	defer func() {
		if err := recover(); err != nil {
			log.Error(ctx, "Goroutine Panic", zap.Any("error", err), zap.ByteString("stack", debug.Stack()))
		}
	}()

	fn(ctx)
}

func CheckFields(fields, columns []string) error {
	if len(fields) == 0 {
		return nil
	}
	for _, v := range fields {
		if !yiigo.SliceIn(columns, v) {
			return fmt.Errorf("invalid field: %s", v)
		}
	}
	return nil
}
