package middleware

import (
	"context"

	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"

	"{{.Module}}/pkg/lib/log"
)

// TraceId is a middleware that injects a trace ID into the context of each request.
func TraceId(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {
	md, ok := metadata.FromIncomingContext(ctx)
	if !ok {
		md = metadata.Pairs()
	}
	if v := md.Get(log.TraceId); len(v) == 0 {
		md.Set(log.TraceId, log.NewTraceId())
	}
	md.Set(log.TraceMethod, info.FullMethod)
	// set the response header
	_ = grpc.SetHeader(ctx, metadata.Pairs(log.TraceId, md.Get(log.TraceId)[0]))
	return handler(metadata.NewIncomingContext(ctx, md), req)
}
