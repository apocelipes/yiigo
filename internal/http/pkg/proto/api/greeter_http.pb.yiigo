// Code generated by protoc-gen-yiigo. DO NOT EDIT.
// versions:
// - protoc-gen-yiigo v1.0.0
// - protoc           (unknown)
// source: greeter.proto

package api

import (
	context "context"
	v5 "github.com/go-chi/chi/v5"
	contrib "github.com/yiigo/contrib"
	result "github.com/yiigo/contrib/result"
	http "net/http"
)

// HttpGreeterService is the API definition for GreeterService
type HttpGreeterService interface {
	// Sends a greeting
	SayHello(ctx context.Context, req *HelloRequest) (*HelloResponse, error)
}

func RegisterHttpGreeterService(r v5.Router, srv HttpGreeterService) {
	// Sends a greeting
	r.Post("/v1/greeter", _GreeterService_SayHello(srv))
	r.Get("/v1/greeter", _GreeterService_SayHello(srv))
}

func _GreeterService_SayHello(srv HttpGreeterService) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		ctx := r.Context()
		// parse request
		req := new(HelloRequest)
		if err := contrib.BindProto(r, req); err != nil {
			result.Err(err).JSON(w, r)
			return
		}
		// call service
		resp, err := srv.SayHello(ctx, req)
		if err != nil {
			result.Err(err).JSON(w, r)
			return
		}
		result.OK(resp).JSON(w, r)
	}
}
