// Code generated by protoc-gen-yiigo. DO NOT EDIT.
// versions:
// - protoc-gen-yiigo v1.0.0
// - protoc (unknown)
// source: greeter.proto

package api

import (
	context "context"
	v5 "github.com/go-chi/chi/v5"
	contrib "github.com/yiigo/contrib"
	result "github.com/yiigo/contrib/result"
	http "net/http"
)

// HttpGreeter is the server API for Greeter service.
type HttpGreeter interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloResponse, error)
}

func RegisterHttpGreeter(r v5.Router, srv HttpGreeter) {
	// Sends a greeting
	r.Post("/v1/greeter", _Greeter_SayHello(srv))
	r.Get("/v1/greeter", _Greeter_SayHello(srv))
}

func _Greeter_SayHello(srv HttpGreeter) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		ctx := r.Context()
		// parse request
		req := new(HelloRequest)
		if err := contrib.BindProto(r, req); err != nil {
			result.Err(err).JSON(w, r)
			return
		}
		// call service
		resp, err := srv.SayHello(ctx, req)
		if err != nil {
			result.Err(err).JSON(w, r)
			return
		}
		result.OK(resp).JSON(w, r)
	}
}
