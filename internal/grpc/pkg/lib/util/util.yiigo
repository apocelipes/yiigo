package util

import (
	"context"
	"fmt"
	"runtime/debug"

	"{{.Module}}/pkg/lib/log"

	"github.com/yiigo/contrib"
	"go.uber.org/zap"
)

// Safe recover for goroutine when panic
func Safe(ctx context.Context, fn func(ctx context.Context)) {
	defer func() {
		if err := recover(); err != nil {
			log.Error(ctx, "Goroutine panic recovered", zap.Any("error", err), zap.ByteString("stack", debug.Stack()))
		}
	}()
	fn(ctx)
}

func CheckFields(fields, columns []string) error {
	if len(fields) == 0 {
		return nil
	}
	for _, v := range fields {
		if !contrib.SliceIn(columns, v) {
			return fmt.Errorf("invalid field: %s", v)
		}
	}
	return nil
}
