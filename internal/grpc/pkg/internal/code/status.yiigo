package code

import (
	"context"
	"fmt"

	"{{.Module}}/pkg/lib/trace"

	"github.com/yiigo/contrib/result"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/metadata"
	"google.golang.org/grpc/status"
)

type Code struct {
	result.Code
}

func (c Code) Err(ctx context.Context, msg ...string) error {
	var traceId string
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vals := md.Get(trace.TraceId); len(vals) != 0 {
			traceId = vals[0]
		}
	}
	desc := c.Desc()
	if len(msg) != 0 {
		desc = msg[0]
	}
	return status.Error(codes.Code(c.Val()), fmt.Sprintf("[%s] %s", traceId, desc))
}

func New(code int, desc string) *Code {
	return &Code{result.ErrCode(code, desc)}
}
